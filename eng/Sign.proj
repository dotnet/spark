<Project Sdk="Microsoft.NET.Sdk">
  <!-- This will be overridden if we're building with MicroBuild. -->
  <Target Name="SignFiles">
    <Message Importance="High" Text="Attempting to sign %(FilesToSign.Identity) with authenticode='%(FilesToSign.Authenticode)'" />
  </Target>

  <Import Project="$(MSBuildThisFileDirectory)\obj\Tools.proj.nuget.g.props" Condition="Exists('$(MSBuildThisFileDirectory)\obj\Tools.proj.nuget.g.props')" />
  <Import Project="$(MSBuildThisFileDirectory)\obj\Tools.proj.nuget.g.targets" Condition="Exists('$(MSBuildThisFileDirectory)\obj\Tools.proj.nuget.g.targets')" />

  <Target Name="SetSigningProperties">
    <PropertyGroup>
      <!-- The OutDir and IntermediateOutputPath properties are required by MicroBuild. MicroBuild only
           signs files that are under these paths. -->
      <OutDir>$(SignAssetsDir)</OutDir>
      <IntermediateOutputPath>$(SignAssetsDir)obj/</IntermediateOutputPath>

    </PropertyGroup>

    <Error Condition="!Exists('$(OutDir)')" Text="'OutDir' folder '$(OutDir)' does not exist."/>
  </Target>

  <Target Name="SignBinaries" Condition="'$(SignType)' == 'real'" DependsOnTargets="SetSigningProperties;GetFilesToSign">
    <CallTarget Targets="SignFiles" />
  </Target>

  <Target Name="GetFilesToSign">

    <ItemGroup Condition="'$(SignWorkerBinaries)' == 'true'">
      <_filesToSign Include="$(OutDir)**/Microsoft.Spark.dll" />
      <_filesToSign Include="$(OutDir)**/Microsoft.Spark.Worker.exe" />
      <_filesToSign Include="$(OutDir)**/Microsoft.Spark.Worker.dll" />

      <FilesToSign Include="@(_filesToSign)">
        <Authenticode>Microsoft</Authenticode>
      </FilesToSign>
    </ItemGroup>

    <ItemGroup Condition="'$(SignNugetPackages)' == 'true'">
      <FilesToSign Include="$(OutDir)*.nupkg;$(OutDir)*.snupkg">
        <Authenticode>NuGet</Authenticode>
      </FilesToSign>
    </ItemGroup>

    <ItemGroup Condition="'$(SignSparkBinaries)' == 'true'">
      <FilesToSign Include="$(OutDir)**/Microsoft.Spark.dll">
        <Authenticode>Microsoft</Authenticode>
      </FilesToSign>
    </ItemGroup>

    <ItemGroup Condition="'$(SignJarBinaries)' == 'true'">
      <FilesToSign Include="$(OutDir)**/microsoft-spark-*.jar">
        <Authenticode>MicrosoftJARSHA2</Authenticode>
      </FilesToSign>
    </ItemGroup>

    <Error Condition="'@(FilesToSign)' == ''" Text="There are no files to sign. FilesToSign group is empty."/>
  </Target>
</Project>